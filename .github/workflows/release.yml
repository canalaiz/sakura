name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*.*.*-alpha'
      - 'v*.*.*-beta'
      - 'v*.*.*-prerelease'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2      

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23.6'
      
      - name: Install dependencies
        run: go mod tidy

      - name: Build binary
        run: |
          mkdir -p build
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o build/sakura-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}

      - name: Create distribution packages
        run: |
          mkdir -p dist
          tar -czf dist/sakura-${{ matrix.os }}-${{ matrix.arch }}.tar.gz -C build sakura-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }}

      - name: Upload Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: sakura-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/sakura-${{ matrix.os }}-${{ matrix.arch }}.tar.gz

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64]

    steps:
      - name: Download Release Assets
        uses: actions/download-artifact@v4
        with:
          name: sakura-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          prerelease: ${{ contains(github.ref, '-alpha') || contains(github.ref, '-beta') || contains(github.ref, '-prerelease') }}
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
